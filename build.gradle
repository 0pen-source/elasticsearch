apply plugin: 'idea'


allprojects {

  // injecting groovy property variables into all projects
  project.ext {
    // minimum java 8
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    luceneSnapshotRevision = '1702855'
    randomizedRunnerSnapshotRevision = 'pr202'
    // dependnecy versions that are used in more than one place
    versions = [
      elasticsearch:      '3.0.0-beta1-SNAPSHOT',
      lucene:             "5.4.0-snapshot-${luceneSnapshotRevision}",
      randomizedrunner:   "2.2.0-snapshot-${randomizedRunnerSnapshotRevision}"
    ]
  }

  repositories {
    mavenLocal()
    mavenCentral()
    // Sonatype Snapshots (Elasticsearch)
    maven {
      url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
      url "https://s3.amazonaws.com/download.elasticsearch.org/lucenesnapshots/${luceneSnapshotRevision}"
    }
    maven {
      url "https://s3.amazonaws.com/download.elasticsearch.org/lucenesnapshots/rr-${randomizedRunnerSnapshotRevision}"
    }
  }

  // fail on all javac warnings
  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.compilerArgs << "-Werror" << "-Xlint:all" 
    }
  }
}

// substitute local projects
subprojects {
  configurations {
    all {
      resolutionStrategy {
        //failOnVersionConflict()

        dependencySubstitution {
          substitute module('org.elasticsearch:elasticsearch') with project(':core')
          substitute module('org.elasticsearch:test-framework') with project(':test-framework')
          substitute module('org.elasticsearch:rest-api-spec') with project(':rest-api-spec')
          substitute module('org.elasticsearch.distributions.zip:elasticsearch') with project(':distribution')
        }
      }
    }
  }

  // define a nice artifacts task to list all artifacts of a project
  task artifacts {
    group = "Help"
    description = "Displays the artifacts associated with each configuration of " + project
    doFirst {
      configurations.findAll().each { config ->
        println "${config}:"
        config.allArtifacts.getFiles().each { file -> println "" + file}
        println ' '
      }
    }
  }
}

