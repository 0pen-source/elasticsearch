import groovy.xml.NamespaceBuilder

apply plugin: 'java'
apply plugin: 'org.elasticsearch.devtools.randomizedtesting'

sourceCompatibility = '1.7'

configurations {
  restSpec
}

repositories {
  mavenCentral()
}


//jvmExecutable = "${System.env.JAVA_HOME}" + File.separator + "bin" + File.separator + "java"

def luceneVersion = '5.2.1'
def jacksonVersion = '2.5.3'
def log4jVersion = '1.2.17'
def slf4jVersion = '1.6.2'

dependencies {

  // lucene
  compile group: 'org.apache.lucene', name: 'lucene-core', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-backward-codecs', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-queries', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-memory', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-highlighter', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-suggest', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-join', version: luceneVersion
  compile group: 'org.apache.lucene', name: 'lucene-spatial', version: luceneVersion
  // TODO: make optional?
  compile group: 'org.apache.lucene', name: 'lucene-expressions', version: luceneVersion

  // TODO: make optional?
  // lucene spatial
  compile group: 'com.spatial4j', name: 'spatial4j', version: '0.4.1'
  compile group: 'com.vividsolutions', name: 'jts', version: '1.13'
  // needed for templating
  compile group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.8.13'

  // START: dependencies that might be shaded
  compile group: 'com.google.guava', name: 'guava', version: '18.0'
  compile group: 'com.carrotsearch', name: 'hppc', version: '0.7.1'
  // joda 2.0 moved to using volatile fields for datetime
  // When updating to a new version, make sure to update our copy of BaseDateTime
  compile group: 'joda-time', name: 'joda-time', version: '2.8'
  compile group: 'org.joda', name: 'joda-convert', version: '1.2'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
  compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-smile', version: jacksonVersion
  compile(group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion) {
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
  }
  compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor', version: jacksonVersion
  compile group: 'io.netty', name: 'netty', version: '3.10.3.Final'
  compile group: 'com.ning', name: 'compress-lzf', version: '1.0.2'
  compile group: 'com.tdunning', name: 't-digest', version: '3.0'
  compile group: 'org.hdrhistogram', name: 'HdrHistogram', version: '2.1.6'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
  compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
  // END: dependencies that might be shaded

  // TODO: make optional?
  compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.4', classifier: 'indy'
  compile group: 'log4j', name: 'log4j', version: log4jVersion
  compile group: 'log4j', name: 'apache-log4j-extras', version: log4jVersion
  compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
  compile group: 'net.java.dev.jna', name: 'jna', version: '4.1.0'
  // remove this for java 8
  compile group: 'com.twitter', name: 'jsr166e', version: '1.1.0'

  testCompile(group: 'junit', name: 'junit', version: '4.11') {
    transitive = false
  }
  testCompile group: 'com.carrotsearch.randomizedtesting', name: 'randomizedtesting-runner', version: '2.1.16'
  testCompile group: 'org.apache.lucene', name: 'lucene-test-framework', version: luceneVersion
  testCompile(group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3') {
    exclude group: 'org.hamcrest', module: 'hamcrest-core'
  }
  testCompile group: 'com.google.jimfs', name: 'jimfs', version: '1.0'
  testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'

  restSpec project(':rest-api-spec') // for rest tests
}

sourceSets {
  main {
    output.resourcesDir = "build/classes/main"
  }
  test {
    // hack, see https://discuss.gradle.org/t/processresources-does-not-copy-to-correct-dir/11293
    output.resourcesDir = "build/classes/test"
    resources {
      // hack because we have lots of resource files in java root
      srcDirs = ['src/test/resources', 'src/test/java']
      excludes = ['**/*.java']
    }
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.java
}

/*
 * A hack because the rest test framework apparently cannot read spec files directly
 * from a jar, but need them to be on the local filesystem.
 * NOTE: the failure looks like this:
 * [ant:junit4]    > Throwable #1: java.lang.RuntimeException: couldn't retrieve URL: jar:file:/Users/rjernst/Code/es-gradle/rest-api-spec/build/libs/rest-api-spec-2.0.0-SNAPSHOT.jar!/rest-api-spec/test/get
[ant:junit4]    >   at __randomizedtesting.SeedInfo.seed([AEA98D31B204924E:364AFBD58E86E8E5]:0)
[ant:junit4]    >   at org.elasticsearch.test.rest.support.FileUtils.resolveFile(FileUtils.java:119)
[ant:junit4]    >   at org.elasticsearch.test.rest.support.FileUtils.findYamlSuites(FileUtils.java:86)
[ant:junit4]    >   at org.elasticsearch.test.rest.test.FileUtilsTests.testLoadMultipleYamlSuites(FileUtilsTests.java:53)
   ...
  [ant:junit4]    > Caused by: java.nio.file.FileSystemNotFoundException
[ant:junit4]    >   at com.sun.nio.zipfs.ZipFileSystemProvider.getFileSystem(ZipFileSystemProvider.java:171)
[ant:junit4]    >   at com.sun.nio.zipfs.ZipFileSystemProvider.getPath(ZipFileSystemProvider.java:157)
[ant:junit4]    >   at java.nio.file.Paths.get(Paths.java:143)
[ant:junit4]    >   at org.elasticsearch.common.io.PathUtils.get(PathUtils.java:75)
[ant:junit4]    >   at org.elasticsearch.test.rest.support.FileUtils.resolveFile(FileUtils.java:115)
 */
task copyRestSpec(type: Copy, dependsOn: configurations.restSpec.buildDependencies) {
  from zipTree(configurations.restSpec.asPath)
  into sourceSets.test.output.classesDir
}

test {
  dependsOn = [copyRestSpec, classes, testClasses]

  outputs.upToDateWhen {
    false
  }
}

// TODO: how to have task know about this global?
/*ant.taskdef(resource: 'com/carrotsearch/junit4/antlib.xml',
            uri: 'junit4',
            classpath: configurations.testCompile.asPath)
def junit4runner = NamespaceBuilder.newInstance(ant, 'junit4')

task test(type: RandomizedRunnerTask, overwrite:true, dependsOn: [testClasses, copyRestSpec]) {
  logging.setLevel(LogLevel.INFO)
  sourceSet = sourceSets.test
  workingDir = new File(buildDir, 'run-tests')
  junit4 = junit4runner
}

class RandomizedRunnerTask extends DefaultTask {
  @Input
  SourceSet sourceSet
  @Input
  workingDir
  @Input
  junit4 

  @TaskAction
  def run() {
    junit4.pickseed(property: 'tests.seed')
    junit4.junit4(
        taskName: 'junit4',
        parallelism: 8,
        dir: workingDir)
    {
      classpath {
        pathElement(path: sourceSet.runtimeClasspath.asPath)
      }
      jvmarg(line: '-ea -esa')
      fileset(dir: sourceSet.output.classesDir) {
*/
//        include(name:'**/*IT.class') // temp
        //include(name:'**/*Test.class')
        //include(name:'**/*Tests.class')
//        exclude(name:'**/Abstract*.class')
//        exclude(name:'**/*StressTest.class')
/*      }
      listeners {
        junit4.'report-text'(
          showThrowable: true,
          showStackTraces: true,
          showOutput: 'onerror', // TODO: change to property
          showStatusOk: false,
          showStatusError: true,
          showStatusFailure: true,
          showStatusIgnored: true,
          showSuiteSummary: true,
          timestamps: false
        )
      }
    }
  }
}
*/

artifacts {
    archives sourcesJar
}

jar {
  baseName = 'elasticsearch'
}
